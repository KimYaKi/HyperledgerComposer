/*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
namespace org.lego.network

abstract participant User identified by userEmail{
  // 사용자 식별 Email
  o String userEmail
}

participant Group extends User{
  // 사용자 그룹 명
  o String[] groupName optional
  // 사용자 상태
  o Boolean[] groupState optional
  // 사용자 권한
  o String[] groupAccount optional
}

asset GroupPay identified by groupName{
  // 사용자 그룹 명
  o String groupName
  // 그룹 회비 금액
  o Double pay
  // 회비 납부 인원 수
  o Double participantNum
  // 현제까지 납부 된 회비
  o Double nowPay
  // 해당 그룹 내에서 납부된 회비 정보
  o SendMoney[] user optional
  // 해당 그룹 내에서 회비를 돌려주는 트랜잭션 정보
  o MinusMoney[] minus optional
  // 해당 그룹의 지출 정보
  o Expenditure[] expend optional
}

// 회비 납부 트랜잭션 속성 선언
@returns(Integer)
transaction SendMoney{
  // 그룹 내의 회계
  --> Group accountant
  // 회비를 내는 사용자
  --> Group normal
  // 회비를 내는 그룹
  --> GroupPay groupPay
}

// 사용자 유형 변경 트랜잭션 속성 선언
@returns(Integer)
transaction ChangeAccount{
  // 마스터 사용자
  --> Group master
  // 일반 사용자
  --> Group user
  // 변경을 시도하는 권한
  o String account
  // 변경을 시도하는 마스터와 일반 사용자의 그룹
  o String group
}

// 사용자의 정보에 그룹 추가
@returns(Integer)
transaction AddGroup{
  // 그룹을 추가하는 사용자 정보
  --> Group user
  // 추가하는 그룹 명
  o String group
  // 입력을 하는 경우는 "master"인 경우만 있음
  o String account
  /**
    본인이 만드는 그룹 내에서는 만드는 사용자가 당연히 master의 권한을 가져야 함
   */
}

// 해당 그룹의 사용자 인증 허용
/**
  무턱대고 일반 사용자가 아무 그룹이나 추가한다고
  그 그룹의 모든 장부 정보를 모여줄 수는 없으므로 최소한의 인증이 필요 함
 */
@returns(Integer)
transaction AccountAgree{
  --> Group master
  --> Group user
  o String group
}

// 사용자 정보로부터 특정 그룹의 정보를 제거
@returns(Integer)
transaction RemoveUserGroup{
  --> Group user
  o String group
}

// 사용자에게 다시 회비를 돌려주는 트랜잭션
@returns(Integer)
transaction MinusMoney{
  --> Group user
  --> Group accountant
  --> GroupPay group
}

@returns(Integer)
transaction Expenditure{
  --> Group accountant
  --> GroupPay groupPay
  o String Article
  o Integer value
}